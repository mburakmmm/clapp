name: üîÑ Update Package Index

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/**'
      - 'build_index.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/**'
      - 'build_index.py'
  workflow_dispatch:

jobs:
  update-index:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Gerekirse requirements.txt'den y√ºkle
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
    
    - name: üîç Check packages directory
      run: |
        echo "üìÅ Packages directory contents:"
        ls -la packages/ || echo "‚ö†Ô∏è  No packages directory found"
        
        echo "üìã Package manifests:"
        find packages/ -name "manifest.json" -type f || echo "‚ö†Ô∏è  No manifest files found"
    
    - name: üöÄ Run index builder
      run: |
        echo "üîÑ Building index.json..."
        python build_index.py
        
        echo "‚úÖ Index build completed"
        
        # Index.json i√ßeriƒüini g√∂ster
        if [ -f index.json ]; then
          echo "üìÑ Generated index.json:"
          cat index.json
        else
          echo "‚ùå index.json not generated"
          exit 1
        fi
    
    - name: üìä Check for changes
      id: check_changes
      run: |
        if git diff --quiet index.json; then
          echo "No changes in index.json"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected in index.json"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          
          echo "üìã Changes:"
          git diff index.json
        fi
    
    - name: üîß Configure Git
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git config user.name "clapp-bot"
        git config user.email "clapp-bot@users.noreply.github.com"
    
    - name: üíæ Commit and push changes
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git add index.json
        git commit -m "üîÑ Auto-update index.json from GitHub Actions
        
        - Updated package index with latest changes
        - Generated by build_index.py
        - Triggered by: ${{ github.event_name }}
        - Commit: ${{ github.sha }}"
        
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: üìà Summary
      run: |
        echo "## üì¶ Package Index Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check_changes.outputs.has_changes }}" == "true" ]; then
          echo "‚úÖ **Index updated successfully**" >> $GITHUB_STEP_SUMMARY
          echo "- Changes detected and committed" >> $GITHUB_STEP_SUMMARY
        else
          echo "‚ÑπÔ∏è  **No changes required**" >> $GITHUB_STEP_SUMMARY
          echo "- Index.json is already up to date" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìã Package Count" >> $GITHUB_STEP_SUMMARY
        
        if [ -f index.json ]; then
          PACKAGE_COUNT=$(python -c "import json; print(len(json.load(open('index.json'))))")
          echo "- Total packages: **$PACKAGE_COUNT**" >> $GITHUB_STEP_SUMMARY
        else
          echo "- Could not determine package count" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîó Useful Links" >> $GITHUB_STEP_SUMMARY
        echo "- [View index.json](https://github.com/${{ github.repository }}/blob/main/index.json)" >> $GITHUB_STEP_SUMMARY
        echo "- [Package directory](https://github.com/${{ github.repository }}/tree/main/packages)" >> $GITHUB_STEP_SUMMARY

  validate-packages:
    runs-on: ubuntu-latest
    needs: update-index
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main  # En g√ºncel main branch'i al
    
    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: üîç Validate all packages
      run: |
        echo "üîç Validating all package manifests..."
        
        INVALID_COUNT=0
        TOTAL_COUNT=0
        
        for manifest in packages/*/manifest.json; do
          if [ -f "$manifest" ]; then
            TOTAL_COUNT=$((TOTAL_COUNT + 1))
            echo "Validating: $manifest"
            
            # JSON syntax kontrol√º
            if ! python -m json.tool "$manifest" > /dev/null 2>&1; then
              echo "‚ùå Invalid JSON: $manifest"
              INVALID_COUNT=$((INVALID_COUNT + 1))
            else
              echo "‚úÖ Valid JSON: $manifest"
            fi
          fi
        done
        
        echo ""
        echo "üìä Validation Summary:"
        echo "- Total packages: $TOTAL_COUNT"
        echo "- Invalid packages: $INVALID_COUNT"
        
        if [ $INVALID_COUNT -gt 0 ]; then
          echo "‚ùå Validation failed: $INVALID_COUNT invalid packages found"
          exit 1
        else
          echo "‚úÖ All packages are valid"
        fi 